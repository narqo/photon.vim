<%
    # RNB, A VIM COLORSCHEME TEMPLATE
    # Author:        Romain Lafourcade (https://github.com/romainl)
    # Canonical URL: https://github.com/romainl/vim-rnb

    information = {
        author:      "Alex Vear",
        email:       "alex@vear.uk",
        name:        "antiphoton",
        description: "An elegant, light colour scheme with minimal syntax highlighting",
        background:  "light",
        webpage:     "https://github.com/axvr/photon.vim",
        licence:     "MIT (2020)"
    }

    # Color palette:
    #
    # black = [       give each color a distinctive name
    #   "#000000",    hexadecimal color used in GVim/MacVim or "NONE"
    #   0,            integer between 0 and 255 used by terminals supporting 256 colors
    #                 or "NONE"
    #   "black"       color name used by less capable color terminals, can be "darkred",
    #                 "red", "darkgreen", "green", "darkyellow", "yellow", "darkblue",
    #                 "blue", "darkmagenta", "magenta", "black", "darkgrey", "grey",
    #                 "white", or "NONE"
    # ]
    #
    # If your colors are defined correctly, the resulting colorscheme is
    # guaranteed to work in GVim (Windows/Linux), MacVim (MacOS), and any
    # properly set up terminal emulator.

    # Background
    bg = ["#ffffff", 255, "white"]

    # Darker background shades
    bgd_1 = ["#eeeeee", 255, "white"]
    bgd_2 = ["#e4e4e4", 254, "white"]
    bgd_3 = ["#dadada", 253, "grey"]
    bgd_4 = ["#949494", 246, "gray"]

    # Foreground
    fg = ["#121212", 233, "black"]

    # Lighter background shades
    fgl_1 = ["#303030", 236, "black"]
    fgl_2 = ["#4e4e4e", 239, "darkgrey"]

    # Accents
    aqua = ["#c1ddff", 134, "aqua"]
    cyan = ["#55b4d4", 134, "cyan"]
    purple = ["#af5fd7", 134, "darkmagenta"]
    orange = ["#d75f5f", 203, "red"]
    grey = ["#6c6c6c", 242, "darkgray"]
    green = ["#008700", 28, "darkgreen"]
    red = ["#af0000", 124, "darkred"]
    yellow = ["#fffa00", 166, "yellow"]
    darkyellow = ["#d75f00", 166, "darkyellow"]

    # Highlights:
    #
    # You can define highlight groups like this:
    #
    #   [ "Normal",       name of the highlight group
    #     white,          the color used for background color, or use "NONE", "fg" or "bg"
    #     darkgray,       the color used for foreground color, or use "NONE", "fg" or "bg"
    #     "NONE"          style, can be "bold", "underline", "reverse", "italic",
    #                     "standout", "NONE" or "undercurl"
    #   ]
    #
    # The sample above tells Vim to render normal text in dark gray against
    # a white background, without any other styling.
    #
    # Or you can link an highlight group to another. Here, "Title" will inherit
    # its style from "Normal":
    #
    #   [ "Title", "Normal" ]
    #
    # In GUI Vim, there is an additional color for the undercurl used to
    # highlight spelling mistakes:
    #
    #   [ "SpellBad",     name of the highlight group
    #     "NONE",         the color used for background color, or use "NONE", "fg" or "bg"
    #     red,            the color used for foreground color, or use "NONE", "fg" or "bg"
    #     "undercurl",    style
    #     red             color used for the undercurl
    #   ]
    #
    # The sample above tells Vim to render badly spelled words in red against
    # the current background, with a red undercurl.

    highlights = [
        [ "Normal", bg, fg, "NONE" ],
        [ "NonText", "NONE", bgd_3, "NONE" ],
        [ "Comment", "NONE", bgd_4, "NONE" ],
        [ "Conceal", "NONE", grey, "NONE" ],

        [ "Constant", "NONE", fg, "NONE" ],
        [ "Character", "Constant" ],
        [ "Number", "Constant" ],
        [ "Float", "Number" ],
        [ "Boolean", "Constant" ],
        [ "String", "NONE", purple, "NONE" ],

        [ "Identifier", "NONE", fg, "NONE" ],
        [ "Function", "Identifier" ],

        [ "Statement", "NONE", fgl_1, "NONE" ],
        [ "Conditonal", "Statement" ],
        [ "Repeat", "Statement" ],
        [ "Label", "Statement" ],
        [ "Keyword", "Statement" ],
        [ "Exception", "Statement" ],

        [ "Operator", "NONE", fg, "NONE" ],

        [ "PreProc", "NONE", fgl_1, "NONE" ],
        [ "Include", "PreProc" ],
        [ "Define", "PreProc" ],
        [ "Macro", "PreProc" ],
        [ "PreCondit", "PreProc" ],

        [ "Type", "NONE", fgl_1, "NONE" ],
        [ "StorageClass", "Type" ],
        [ "Structure", "Type" ],
        [ "Typedef", "Type" ],

        [ "Special", "NONE", grey, "NONE" ],
        [ "SpecialChar", "Special" ],
        [ "Tag", "Special" ],
        [ "Delimiter", "Special" ],
        [ "SpecialComment", "Special" ],
        [ "Debug", "Special" ],

        [ "Error", "NONE", red, "NONE" ],
        [ "ErrorMsg", "Error" ],
        [ "Warning", "NONE", darkyellow, "NONE" ],
        [ "WarningMsg", "Warning" ],

        [ "ModeMsg", "NONE", grey, "NONE" ],
        [ "MoreMsg", "ModeMsg" ],
        [ "Question", "ModeMsg" ],

        [ "Ignore", "NonText" ],
        [ "Todo", "NONE", orange, "bold" ],
        [ "Underlined", "NONE", fg, "underline" ],

        [ "StatusLine", bgd_2, purple, "bold" ],
        [ "StatusLineNC", bgd_1, grey, "NONE" ],
        [ "StatusLineTerm", "StatusLine" ],
        [ "StatusLineTermNC", "StatusLineNC" ],
        [ "TabLine", bgd_3, grey, "NONE"],
        [ "TabLineFill", "TabLine" ],
        [ "TabLineSel", bgd_1, purple, "bold" ],
        [ "WildMenu", orange, bg, "NONE" ],
        [ "VertSplit", bgd_1, bgd_1, "NONE" ],

        [ "Title", "NONE", fg, "bold" ],

        [ "LineNr", "NONE", bgd_4, "NONE" ],
        [ "CursorLineNr", bgd_1, purple, "NONE" ],
        [ "Cursor", purple, fg, "NONE" ],
        [ "CursorLine", bgd_1, "NONE", "NONE" ],
        [ "CursorColumn", "CursorLine" ],
        [ "ColorColumn", "CursorColumn" ],
        [ "SignColumn", "NONE", grey, "NONE" ],

        [ "Visual", aqua, "fg", "NONE" ],
        [ "VisualNOS", aqua, "fg", "NONE" ],

        [ "Pmenu", bgd_1, grey, "NONE" ],
        [ "PmenuSbar", bgd_2, "NONE", "NONE" ],
        [ "PmenuSel", bgd_2, purple, "bold" ],
        [ "PmenuThumb", orange, "NONE", "NONE" ],

        [ "Folded", bgd_3, grey, "NONE" ],
        [ "FoldColumn", "NONE", yellow, "NONE" ],

        [ "SpecialKey", "NONE", grey, "NONE" ],
        [ "IncSearch", yellow, fg, "NONE" ],
        [ "Search", yellow, fg, "NONE" ],
        [ "Directory", "NONE", purple, "NONE" ],
        [ "MatchParen", "NONE", orange, "bold" ],

        [ "SpellBad", "NONE", red, "underline" ],
        [ "SpellCap", "NONE", green, "underline" ],
        [ "SpellLocal", "NONE", yellow, "underline" ],
        [ "SpellRare", "SpellLocal" ],

        [ "QuickFixLine", bgd_3, "NONE", "NONE" ],

        [ "DiffAdd", bgd_1, green, "NONE" ],
        [ "DiffChange", bgd_1, "NONE", "NONE" ],
        [ "DiffDelete", bgd_1, red, "NONE" ],
        [ "DiffText", bgd_1, yellow, "NONE" ],
        [ "diffAdded", "DiffAdd" ],
        [ "diffRemoved", "DiffDelete" ],

        [ "helpHyperTextJump", "NONE", purple, "NONE" ],
        [ "htmlTag", "htmlTagName" ],
        [ "htmlEndTag", "htmlTag" ],
        [ "gitcommitSummary", "Title" ]
    ]

    # Define the color palette used by :terminal when in GUI Vim or in TUI Vim
    # when 'termguicolors' is enabled. If this list is empty or if it doesn't
    # contain exactly 16 items, the corresponding Vim variable won't be set.
    terminal_ansi_colors = [
        # Dark
        fgl_1,        # black
        red,          # red
        green,        # green
        ["#a2734c"],  # yellow
        ["#12488b"],  # blue
        ["#a347ba"],  # magenta
        cyan,         # cyan
        bgd_4,        # white

        # Bright
        fgl_2,        # black
        orange,       # red
        ["#33d17a"],  # green
        yellow,       # yellow
        ["#2a7bde"],  # blue
        purple,       # magenta
        ["#33c7de"],  # cyan
        bgd_2         # white
    ]

    # Many thanks to Barry Arthur (https://github.com/dahu) for the original idea.
-%>
" Name:        <%= information[:name] %>.vim
" Author:      <%= information[:author] %> <<%= information[:email] %>>
" Webpage:     <%= information[:webpage] %>
" Description: <%= information[:description] %>
" Licence:     <%= information[:licence] %>
" Last Change: <%= Time.new.strftime "%Y-%m-%d" %>

hi clear
if exists("syntax_on")
  syntax reset
endif

let colors_name = "<%= information[:name].downcase %>"

if ($TERM =~ '256' || &t_Co >= 256) || has("gui_running")
<% for highlight in highlights -%>
<% if highlight.length == 4 -%>
    hi <%= highlight[0] %> ctermbg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][1] %> ctermfg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][1] %> cterm=<%= highlight[3] %> guibg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][0] %> guifg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][0] %> gui=<%= highlight[3] %>
<% if highlight[0] == "Normal" -%>
<%= '' %>
    set background=<%= information[:background] %>
<%= '' %>
<% end -%>
<% elsif highlight.length > 4 -%>
    hi <%= highlight[0] %> ctermbg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][1] %> ctermfg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][1] %> cterm=<%= highlight[3] %> guibg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][0] %> guifg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][0] %> gui=<%= highlight[3] %> guisp=<%= highlight[4].kind_of?(String) ? highlight[4] : highlight[4][0] %>
<% end -%>
<% end -%>

elseif &t_Co == 8 || $TERM !~# '^linux' || &t_Co == 16
    set t_Co=16
<%= '' %>
<% for highlight in highlights -%>
<% if highlight.length > 2 -%>
    hi <%= highlight[0] %> ctermbg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][2] %> ctermfg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][2] %> cterm=<%= highlight[3] %>
<% if highlight[0] == "Normal" -%>
<%= '' %>
    set background=<%= information[:background] %>
<%= '' %>
<% end -%>
<% end -%>
<% end -%>
endif
<% links = highlights.select do |highlight| -%>
<% highlight.length == 2 -%>
<% end -%>
<% if links.length > 0 -%>
<%= '' %>
<% for link in links -%>
hi! link <%= link[0] %> <%= link[1] %>
<% end -%>
<% end -%>
<% if terminal_ansi_colors.length == 16 -%>
<%= '' %>
if has('nvim')
<% terminal_ansi_colors.each_with_index do |color,index| -%>
    let g:terminal_color_<%= index %> = '<%= color[0] %>'
<% end -%>
else
    let g:terminal_ansi_colors = [
<% for color in terminal_ansi_colors -%>
            \ '<%= color[0] %>',
<% end -%>
            \ ]
endif
<% end -%>

" Generated with RNB (https://github.com/romainl/vim-rnb)
